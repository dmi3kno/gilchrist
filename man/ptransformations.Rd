% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformations.R
\name{ptr_lehmann1}
\alias{ptr_lehmann1}
\alias{ptr_lehmann2}
\alias{ptr_exp}
\alias{ptr_fun}
\alias{ptr_shiftby}
\alias{ptr_scaleby}
\alias{ptr_powerby}
\alias{ptr_KM}
\alias{ptr_DUS}
\alias{ptr_modi}
\title{p-transformations}
\usage{
ptr_lehmann1(fun, nm_pow = ".pow", .invert = TRUE)

ptr_lehmann2(fun, nm_pow = ".pow", .invert = TRUE)

ptr_exp(fun, nm_base = ".base", .invert = TRUE)

ptr_fun(fun, .fun)

ptr_shiftby(fun, x = 0)

ptr_scaleby(fun, x = 1)

ptr_powerby(fun, x = 1)

ptr_KM(fun)

ptr_DUS(fun)

ptr_modi(fun)
}
\arguments{
\item{fun}{function}

\item{nm_pow}{character.  The name of the power parameter. The default name is \code{.pow}. The default value is 1
Should be a valid unique variable name other than "u"}

\item{.invert}{logical. Should the power parameter be inverted (1/.pow) before applying. Default TRUE}

\item{nm_base}{character.  The name of the base parameter. The default name is \code{.base}. The default value is \code{exp(1)} (Euler's constant).}

\item{.fun}{function without arguments(or with all default arguments) to be applied as Q-transformation}

\item{x}{numeric. Fixed value to shift/scale/power the u by}
}
\value{
modified function
}
\description{
Some of the typical transformations of QFs, implementing a p-transformation rule.
\itemize{
\item \code{ptr_lehmann1()}: Lehman Type I inverse exponentiation. Returns \eqn{u^{1/k}}.
\item \code{ptr_lehmann2()}: Lehman Type II inverse exponentiation. Returns \eqn{1-(1-u)^{1/k}}.
\item \code{ptr_exp()}: Exponentiating the QF. Returns \eqn{k^Q_1(u)}. The value of k defaults to Euler's constant.
\item \code{ptr_fun()}: Q-transform with generic function without additional arguments. \eqn{.fun(Q_1(u))}.
\item \code{ptr_KM()}: Kavya-Manoharan (KM) transformation \eqn{-\ln(1-u\frac{e-1}{e})}
\item \code{ptr_DUS()}: Dinesh-Umesh-Sunjay (DUS) transformation \eqn{\ln(1-u+eu)}.
\item \code{ptr_modi()}: Modi transformation \eqn{\frac{u\alpha^\beta}{1-u+\alpha^\beta})}
}
}
\examples{
qf_exp <- function(u)-log(1-u)
qf_weibull <- qtr_lehmann1(qf_exp, "k")
qf_weibull(0.5,k=1/5)
qweibull(0.5, shape = 5)
qtr_fun(sqf_exp,log1p)
}
