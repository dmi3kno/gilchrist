% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ptransformations.R
\name{ptr_lehmann1}
\alias{ptr_lehmann1}
\alias{ptr_lehmann2}
\alias{ptr_fun}
\alias{ptr_qf}
\alias{ptr_half}
\alias{ptr_KM}
\alias{ptr_DUS}
\alias{ptr_MO}
\alias{ptr_GMO}
\alias{ptr_TL}
\alias{ptr_oddITL}
\alias{ptr_modi1}
\alias{ptr_modi2}
\title{p-transformations}
\usage{
ptr_lehmann1(fun, nm_pow = ".pow", pow = 1, .invert = TRUE)

ptr_lehmann2(fun, nm_pow = ".pow", pow = 1, .invert = TRUE)

ptr_fun(fun, .fun)

ptr_qf(fun, .qf)

ptr_half(fun)

ptr_KM(fun)

ptr_DUS(fun)

ptr_MO(fun, nm_mopar = ".mopar", mopar = 1)

ptr_GMO(fun, nm_mopar = ".mopar", nm_pow = ".pow", mopar = 1, pow = 1)

ptr_TL(fun, nm_tlpar = ".tlpar", tlpar = 1)

ptr_oddITL(fun)

ptr_modi1(fun, nm_a = ".modialpha", nm_b = ".modibeta", a = 1, b = 1)

ptr_modi2(fun, nm_a = ".modialpha", nm_b = ".modibeta", a = 1, b = 1)
}
\arguments{
\item{fun}{function}

\item{nm_pow}{character.  The name of the power parameter. The default name is \code{.pow}. The default value is 1
Should be a valid unique variable name other than "u"}

\item{pow}{character.  The name of the power parameter. The default name is \code{.pow}.}

\item{.invert}{logical. Should the power parameter be inverted (1/.pow) before applying. Default TRUE}

\item{.fun}{function without arguments(or with all default arguments) to be applied as Q-transformation}

\item{.qf}{quantile function made with gilchrist (or wrapped basic function able to accept optional arguments through ellipsis) to be applied as p-transformation}

\item{nm_mopar}{character. Name of the Marchall-Olking parameter. Default \code{.mopar}.
Should be a valid unique variable name other than "u"}

\item{mopar}{numeric. Default value for MO parameter. Default is 1.}

\item{nm_tlpar}{character. Name of the Marchall-Olking parameter. Default \code{.tlpar}}

\item{tlpar}{numeric. Default value for MO parameter. Default is 1.}

\item{nm_a}{character.  The name of the Modi parameter \code{alpha}. The default name is \code{.modialpha}.}

\item{nm_b}{character.  The name of the Modi parameter \code{beta}. The default name is \code{.modibeta}. Default value is 1.}

\item{a}{numeric. Default value of the Modi parameter \code{alpha}. Default is 1}

\item{b}{numeric. Default value of the Modi parameter \code{beta}. Default is 2}
}
\value{
modified function
}
\description{
Some of the typical transformations of QFs, implementing a p-transformation rule.
\itemize{
\item \code{ptr_lehmann1()}: Lehman Type I inverse exponentiation. (U->U). Returns \eqn{u^{1/k}}.
\item \code{ptr_lehmann2()}: Lehman Type II inverse exponentiation. (U->U). Returns \eqn{1-(1-u)^{1/k}}.
\item \code{ptr_fun()}: p-transform with generic function without additional arguments. (U->U, U->R) \eqn{Q_1(.fun(u))}.
\item \code{ptr_half()}: p-transform into half-distribution. (U->U) Returns \eqn{Q_1((u+1)/2))}.
\item \code{ptr_oddITL()}: Odd Inverse Topp-Leone transformation \eqn{\frac{\sqrt{u}}{1-\sqrt{u}}=\frac{u+\sqrt{u}}{1-u}=\frac{\sqrt{u}(1+\sqrt{u})}{1-u}=(u^{-1/2}-1)^{-1} }
\item \code{ptr_DUS()}: Dinesh-Umesh-Sunjay (DUS) transformation. (U->U) Returns \eqn{\ln(1-u+eu)}.
\item \code{ptr_KM()}: Kavya-Manoharan (KM) transformation. Equal to reflected and shifted DUS trasnformation (U->U). Returns \eqn{-\ln(1-u\frac{e-1}{e})}
\item \code{ptr_modi1()}: Modi transformation \eqn{\frac{u\alpha^\beta}{1-u+\alpha^\beta}}. Only alpha is mandatory, while beta defaults to 1
\item \code{ptr_modi2()}: Modi transformation \eqn{\frac{u+u\alpha^\beta}{u+\alpha^\beta})}. Only alpha is mandatory, while beta defaults to 1
}
}
\examples{
qf_exp <- as_qf(function(u)-log(1-u))
qf_weibull <- qtr_lehmann1(qf_exp, "k")
qf_weibull(0.5,k=1/5)
qweibull(0.5, shape = 5)
qtr_fun(qf_exp,log1p)
qtr_fun(qf_exp,log1p)
}
